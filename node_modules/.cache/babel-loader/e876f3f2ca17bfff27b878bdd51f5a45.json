{"ast":null,"code":"var _jsxFileName = \"/home/jackson/projetos/projeto_forms_redux/exercise-forms-redux/src/pages/PersonalForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { actionChangeForm } from '../redux/actions/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePath = this.handlePath.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handlePath() {\n    const {\n      handleUser,\n      history\n    } = this.props;\n    handleUser(this.state);\n    history.push('/professionalform');\n  }\n\n  render() {\n    const {\n      nome,\n      email,\n      cpf,\n      endereco,\n      cidade,\n      estado\n    } = this.state;\n    const states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-mae-forms\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-personalForm\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: nome,\n            name: \"nome\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: email,\n            name: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: cpf,\n            name: \"Cpf\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: endereco,\n            name: \"Endereco\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\",\n            type: \"text\",\n            onChange: this.handleChange,\n            name: \"Cidade\",\n            value: cidade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            defaultOption: \"Selecione\",\n            onChange: this.handleChange,\n            value: estado,\n            label: \"\",\n            id: \"estado\",\n            name: \"Estado\",\n            options: states\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            label: \"Enviar\",\n            onClick: this.handlePath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleUser: state => dispatch(actionChangeForm(state))\n});\n\nexport default connect(null, mapDispatchToProps)(PersonalForm);","map":{"version":3,"sources":["/home/jackson/projetos/projeto_forms_redux/exercise-forms-redux/src/pages/PersonalForm.jsx"],"names":["React","Component","connect","Input","Button","Select","actionChangeForm","PersonalForm","constructor","state","nome","email","cpf","endereco","cidade","estado","handleChange","bind","handlePath","target","name","value","setState","handleUser","history","props","push","render","states","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { actionChangeForm } from '../redux/actions/action';\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePath = this.handlePath.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handlePath() {\n    const { handleUser, history } = this.props;\n    handleUser(this.state);\n    history.push('/professionalform');\n  }\n\n  render() {\n    const { nome, email, cpf, endereco, cidade, estado } = this.state;\n    const states = [\n      'Rio de Janeiro',\n      'Minas Gerais',\n      'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return (\n      <div className=\"div-mae-forms\">\n        <div className=\"div-personalForm\">\n          <fieldset className=\"form\">\n            <Input\n              label=\"\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              value={ nome }\n              name=\"nome\"\n              required\n            />\n            <Input\n              label=\"\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              value={ email }\n              name=\"Email\"\n              required\n            />\n            <Input\n              label=\"\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              value={ cpf }\n              name=\"Cpf\"\n              required\n            />\n            <Input\n              label=\"\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              value={ endereco }\n              name=\"Endereco\"\n              required\n            />\n            <Input\n              label=\"\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              name=\"Cidade\"\n              value={ cidade }\n            />\n            <Select\n              defaultOption=\"Selecione\"\n              onChange={ this.handleChange }\n              value={ estado }\n              label=\"\"\n              id=\"estado\"\n              name=\"Estado\"\n              options={ states }\n            />\n            <Button\n              type=\"button\"\n              label=\"Enviar\"\n              onClick={ this.handlePath }\n            />\n          </fieldset>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleUser: (state) => dispatch(actionChangeForm(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(PersonalForm);\n"]},"metadata":{},"sourceType":"module"}